Terminals unused in grammar

   MYCHAR


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: DeclListP DeclList
    3         | %empty

    4 DeclListP: Type ID Decl

    5 Decl: VarDeclP
    6     | FunDecl

    7 VarDecl: Type ID VarDeclP

    8 VarDeclP: ';'
    9         | '[' NUM ']' ';'

   10 FunDecl: '(' ParamDeclList ')' Block

   11 VarDeclList: VarDecl VarDeclList
   12            | %empty

   13 ParamDeclList: ParamDeclListTail
   14              | %empty

   15 ParamDeclListTail: ParamDecl ParamDeclListTailP

   16 ParamDeclListTailP: ',' ParamDeclListTail
   17                   | %empty

   18 ParamDecl: Type ID ParamDeclP

   19 ParamDeclP: '[' ']'
   20           | %empty

   21 Block: '{' VarDeclList StmtList '}'

   22 Type: INT
   23     | CHAR

   24 StmtList: Stmt StmtListP

   25 StmtListP: StmtList
   26          | %empty

   27 Stmt: ';'
   28     | Expr ';'
   29     | RETURN Expr ';'
   30     | BREAK ';'
   31     | IF '(' Expr ')' Stmt ELSE Stmt
   32     | WHILE '(' Expr ')' Stmt
   33     | Block
   34     | PRINT ID ';'
   35     | READ ID ';'

   36 Expr: UnaryOp Expr
   37     | NUM ExprP
   38     | '(' Expr ')' ExprP
   39     | ID ExprIdTail

   40 ExprIdTail: ExprP
   41           | '(' ExprList ')' ExprP
   42           | '[' Expr ']' ExprArrayTail
   43           | '=' Expr

   44 ExprArrayTail: ExprP
   45              | '=' Expr

   46 ExprP: BinOp Expr
   47      | %empty

   48 ExprList: ExprListTail
   49         | %empty

   50 ExprListTail: Expr ExprListTailP

   51 ExprListTailP: ',' ExprListTail
   52              | %empty

   53 UnaryOp: '-'
   54        | '!'

   55 BinOp: '+'
   56      | '-'
   57      | '*'
   58      | '/'
   59      | EQ
   60      | NEQ
   61      | GT
   62      | LT
   63      | GET
   64      | LET
   65      | AND
   66      | OR


Terminals, with rules where they appear

$end (0) 0
'!' (33) 54
'(' (40) 10 31 32 38 41
')' (41) 10 31 32 38 41
'*' (42) 57
'+' (43) 55
',' (44) 16 51
'-' (45) 53 56
'/' (47) 58
';' (59) 8 9 27 28 29 30 34 35
'=' (61) 43 45
'[' (91) 9 19 42
']' (93) 9 19 42
'{' (123) 21
'}' (125) 21
error (256)
INT (258) 22
CHAR (259) 23
RETURN (260) 29
IF (261) 31
WHILE (262) 32
ELSE (263) 31
BREAK (264) 30
PRINT (265) 34
READ (266) 35
EQ (267) 59
NEQ (268) 60
GT (269) 61
LT (270) 62
GET (271) 63
LET (272) 64
AND (273) 65
OR (274) 66
ID (275) 4 7 18 34 35 39
MYCHAR (276)
NUM (277) 9 37


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
Program (38)
    on left: 1, on right: 0
DeclList (39)
    on left: 2 3, on right: 1 2
DeclListP (40)
    on left: 4, on right: 2
Decl (41)
    on left: 5 6, on right: 4
VarDecl (42)
    on left: 7, on right: 11
VarDeclP (43)
    on left: 8 9, on right: 5 7
FunDecl (44)
    on left: 10, on right: 6
VarDeclList (45)
    on left: 11 12, on right: 11 21
ParamDeclList (46)
    on left: 13 14, on right: 10
ParamDeclListTail (47)
    on left: 15, on right: 13 16
ParamDeclListTailP (48)
    on left: 16 17, on right: 15
ParamDecl (49)
    on left: 18, on right: 15
ParamDeclP (50)
    on left: 19 20, on right: 18
Block (51)
    on left: 21, on right: 10 33
Type (52)
    on left: 22 23, on right: 4 7 18
StmtList (53)
    on left: 24, on right: 21 25
StmtListP (54)
    on left: 25 26, on right: 24
Stmt (55)
    on left: 27 28 29 30 31 32 33 34 35, on right: 24 31 32
Expr (56)
    on left: 36 37 38 39, on right: 28 29 31 32 36 38 42 43 45 46 50
ExprIdTail (57)
    on left: 40 41 42 43, on right: 39
ExprArrayTail (58)
    on left: 44 45, on right: 42
ExprP (59)
    on left: 46 47, on right: 37 38 40 41 44
ExprList (60)
    on left: 48 49, on right: 41
ExprListTail (61)
    on left: 50, on right: 48 51
ExprListTailP (62)
    on left: 51 52, on right: 50
UnaryOp (63)
    on left: 53 54, on right: 36
BinOp (64)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66, on right: 46


State 0

    0 $accept: . Program $end

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    $default  reduce using rule 3 (DeclList)

    Program    go to state 3
    DeclList   go to state 4
    DeclListP  go to state 5
    Type       go to state 6


State 1

   22 Type: INT .

    $default  reduce using rule 22 (Type)


State 2

   23 Type: CHAR .

    $default  reduce using rule 23 (Type)


State 3

    0 $accept: Program . $end

    $end  shift, and go to state 7


State 4

    1 Program: DeclList .

    $default  reduce using rule 1 (Program)


State 5

    2 DeclList: DeclListP . DeclList

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    $default  reduce using rule 3 (DeclList)

    DeclList   go to state 8
    DeclListP  go to state 5
    Type       go to state 6


State 6

    4 DeclListP: Type . ID Decl

    ID  shift, and go to state 9


State 7

    0 $accept: Program $end .

    $default  accept


State 8

    2 DeclList: DeclListP DeclList .

    $default  reduce using rule 2 (DeclList)


State 9

    4 DeclListP: Type ID . Decl

    ';'  shift, and go to state 10
    '['  shift, and go to state 11
    '('  shift, and go to state 12

    Decl      go to state 13
    VarDeclP  go to state 14
    FunDecl   go to state 15


State 10

    8 VarDeclP: ';' .

    $default  reduce using rule 8 (VarDeclP)


State 11

    9 VarDeclP: '[' . NUM ']' ';'

    NUM  shift, and go to state 16


State 12

   10 FunDecl: '(' . ParamDeclList ')' Block

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    $default  reduce using rule 14 (ParamDeclList)

    ParamDeclList      go to state 17
    ParamDeclListTail  go to state 18
    ParamDecl          go to state 19
    Type               go to state 20


State 13

    4 DeclListP: Type ID Decl .

    $default  reduce using rule 4 (DeclListP)


State 14

    5 Decl: VarDeclP .

    $default  reduce using rule 5 (Decl)


State 15

    6 Decl: FunDecl .

    $default  reduce using rule 6 (Decl)


State 16

    9 VarDeclP: '[' NUM . ']' ';'

    ']'  shift, and go to state 21


State 17

   10 FunDecl: '(' ParamDeclList . ')' Block

    ')'  shift, and go to state 22


State 18

   13 ParamDeclList: ParamDeclListTail .

    $default  reduce using rule 13 (ParamDeclList)


State 19

   15 ParamDeclListTail: ParamDecl . ParamDeclListTailP

    ','  shift, and go to state 23

    $default  reduce using rule 17 (ParamDeclListTailP)

    ParamDeclListTailP  go to state 24


State 20

   18 ParamDecl: Type . ID ParamDeclP

    ID  shift, and go to state 25


State 21

    9 VarDeclP: '[' NUM ']' . ';'

    ';'  shift, and go to state 26


State 22

   10 FunDecl: '(' ParamDeclList ')' . Block

    '{'  shift, and go to state 27

    Block  go to state 28


State 23

   16 ParamDeclListTailP: ',' . ParamDeclListTail

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    ParamDeclListTail  go to state 29
    ParamDecl          go to state 19
    Type               go to state 20


State 24

   15 ParamDeclListTail: ParamDecl ParamDeclListTailP .

    $default  reduce using rule 15 (ParamDeclListTail)


State 25

   18 ParamDecl: Type ID . ParamDeclP

    '['  shift, and go to state 30

    $default  reduce using rule 20 (ParamDeclP)

    ParamDeclP  go to state 31


State 26

    9 VarDeclP: '[' NUM ']' ';' .

    $default  reduce using rule 9 (VarDeclP)


State 27

   21 Block: '{' . VarDeclList StmtList '}'

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    $default  reduce using rule 12 (VarDeclList)

    VarDecl      go to state 32
    VarDeclList  go to state 33
    Type         go to state 34


State 28

   10 FunDecl: '(' ParamDeclList ')' Block .

    $default  reduce using rule 10 (FunDecl)


State 29

   16 ParamDeclListTailP: ',' ParamDeclListTail .

    $default  reduce using rule 16 (ParamDeclListTailP)


State 30

   19 ParamDeclP: '[' . ']'

    ']'  shift, and go to state 35


State 31

   18 ParamDecl: Type ID ParamDeclP .

    $default  reduce using rule 18 (ParamDecl)


State 32

   11 VarDeclList: VarDecl . VarDeclList

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    $default  reduce using rule 12 (VarDeclList)

    VarDecl      go to state 32
    VarDeclList  go to state 36
    Type         go to state 34


State 33

   21 Block: '{' VarDeclList . StmtList '}'

    RETURN  shift, and go to state 37
    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    BREAK   shift, and go to state 40
    PRINT   shift, and go to state 41
    READ    shift, and go to state 42
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    '-'     shift, and go to state 45
    '!'     shift, and go to state 46
    ';'     shift, and go to state 47
    '('     shift, and go to state 48
    '{'     shift, and go to state 27

    Block     go to state 49
    StmtList  go to state 50
    Stmt      go to state 51
    Expr      go to state 52
    UnaryOp   go to state 53


State 34

    7 VarDecl: Type . ID VarDeclP

    ID  shift, and go to state 54


State 35

   19 ParamDeclP: '[' ']' .

    $default  reduce using rule 19 (ParamDeclP)


State 36

   11 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 11 (VarDeclList)


State 37

   29 Stmt: RETURN . Expr ';'

    ID   shift, and go to state 43
    NUM  shift, and go to state 44
    '-'  shift, and go to state 45
    '!'  shift, and go to state 46
    '('  shift, and go to state 48

    Expr     go to state 55
    UnaryOp  go to state 53


State 38

   31 Stmt: IF . '(' Expr ')' Stmt ELSE Stmt

    '('  shift, and go to state 56


State 39

   32 Stmt: WHILE . '(' Expr ')' Stmt

    '('  shift, and go to state 57


State 40

   30 Stmt: BREAK . ';'

    ';'  shift, and go to state 58


State 41

   34 Stmt: PRINT . ID ';'

    ID  shift, and go to state 59


State 42

   35 Stmt: READ . ID ';'

    ID  shift, and go to state 60


State 43

   39 Expr: ID . ExprIdTail

    EQ   shift, and go to state 61
    NEQ  shift, and go to state 62
    GT   shift, and go to state 63
    LT   shift, and go to state 64
    GET  shift, and go to state 65
    LET  shift, and go to state 66
    AND  shift, and go to state 67
    OR   shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '='  shift, and go to state 73
    '['  shift, and go to state 74
    '('  shift, and go to state 75

    $default  reduce using rule 47 (ExprP)

    ExprIdTail  go to state 76
    ExprP       go to state 77
    BinOp       go to state 78


State 44

   37 Expr: NUM . ExprP

    EQ   shift, and go to state 61
    NEQ  shift, and go to state 62
    GT   shift, and go to state 63
    LT   shift, and go to state 64
    GET  shift, and go to state 65
    LET  shift, and go to state 66
    AND  shift, and go to state 67
    OR   shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72

    $default  reduce using rule 47 (ExprP)

    ExprP  go to state 79
    BinOp  go to state 78


State 45

   53 UnaryOp: '-' .

    $default  reduce using rule 53 (UnaryOp)


State 46

   54 UnaryOp: '!' .

    $default  reduce using rule 54 (UnaryOp)


State 47

   27 Stmt: ';' .

    $default  reduce using rule 27 (Stmt)


State 48

   38 Expr: '(' . Expr ')' ExprP

    ID   shift, and go to state 43
    NUM  shift, and go to state 44
    '-'  shift, and go to state 45
    '!'  shift, and go to state 46
    '('  shift, and go to state 48

    Expr     go to state 80
    UnaryOp  go to state 53


State 49

   33 Stmt: Block .

    $default  reduce using rule 33 (Stmt)


State 50

   21 Block: '{' VarDeclList StmtList . '}'

    '}'  shift, and go to state 81


State 51

   24 StmtList: Stmt . StmtListP

    RETURN  shift, and go to state 37
    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    BREAK   shift, and go to state 40
    PRINT   shift, and go to state 41
    READ    shift, and go to state 42
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    '-'     shift, and go to state 45
    '!'     shift, and go to state 46
    ';'     shift, and go to state 47
    '('     shift, and go to state 48
    '{'     shift, and go to state 27

    $default  reduce using rule 26 (StmtListP)

    Block      go to state 49
    StmtList   go to state 82
    StmtListP  go to state 83
    Stmt       go to state 51
    Expr       go to state 52
    UnaryOp    go to state 53


State 52

   28 Stmt: Expr . ';'

    ';'  shift, and go to state 84


State 53

   36 Expr: UnaryOp . Expr

    ID   shift, and go to state 43
    NUM  shift, and go to state 44
    '-'  shift, and go to state 45
    '!'  shift, and go to state 46
    '('  shift, and go to state 48

    Expr     go to state 85
    UnaryOp  go to state 53


State 54

    7 VarDecl: Type ID . VarDeclP

    ';'  shift, and go to state 10
    '['  shift, and go to state 11

    VarDeclP  go to state 86


State 55

   29 Stmt: RETURN Expr . ';'

    ';'  shift, and go to state 87


State 56

   31 Stmt: IF '(' . Expr ')' Stmt ELSE Stmt

    ID   shift, and go to state 43
    NUM  shift, and go to state 44
    '-'  shift, and go to state 45
    '!'  shift, and go to state 46
    '('  shift, and go to state 48

    Expr     go to state 88
    UnaryOp  go to state 53


State 57

   32 Stmt: WHILE '(' . Expr ')' Stmt

    ID   shift, and go to state 43
    NUM  shift, and go to state 44
    '-'  shift, and go to state 45
    '!'  shift, and go to state 46
    '('  shift, and go to state 48

    Expr     go to state 89
    UnaryOp  go to state 53


State 58

   30 Stmt: BREAK ';' .

    $default  reduce using rule 30 (Stmt)


State 59

   34 Stmt: PRINT ID . ';'

    ';'  shift, and go to state 90


State 60

   35 Stmt: READ ID . ';'

    ';'  shift, and go to state 91


State 61

   59 BinOp: EQ .

    $default  reduce using rule 59 (BinOp)


State 62

   60 BinOp: NEQ .

    $default  reduce using rule 60 (BinOp)


State 63

   61 BinOp: GT .

    $default  reduce using rule 61 (BinOp)


State 64

   62 BinOp: LT .

    $default  reduce using rule 62 (BinOp)


State 65

   63 BinOp: GET .

    $default  reduce using rule 63 (BinOp)


State 66

   64 BinOp: LET .

    $default  reduce using rule 64 (BinOp)


State 67

   65 BinOp: AND .

    $default  reduce using rule 65 (BinOp)


State 68

   66 BinOp: OR .

    $default  reduce using rule 66 (BinOp)


State 69

   55 BinOp: '+' .

    $default  reduce using rule 55 (BinOp)


State 70

   56 BinOp: '-' .

    $default  reduce using rule 56 (BinOp)


State 71

   57 BinOp: '*' .

    $default  reduce using rule 57 (BinOp)


State 72

   58 BinOp: '/' .

    $default  reduce using rule 58 (BinOp)


State 73

   43 ExprIdTail: '=' . Expr

    ID   shift, and go to state 43
    NUM  shift, and go to state 44
    '-'  shift, and go to state 45
    '!'  shift, and go to state 46
    '('  shift, and go to state 48

    Expr     go to state 92
    UnaryOp  go to state 53


State 74

   42 ExprIdTail: '[' . Expr ']' ExprArrayTail

    ID   shift, and go to state 43
    NUM  shift, and go to state 44
    '-'  shift, and go to state 45
    '!'  shift, and go to state 46
    '('  shift, and go to state 48

    Expr     go to state 93
    UnaryOp  go to state 53


State 75

   41 ExprIdTail: '(' . ExprList ')' ExprP

    ID   shift, and go to state 43
    NUM  shift, and go to state 44
    '-'  shift, and go to state 45
    '!'  shift, and go to state 46
    '('  shift, and go to state 48

    $default  reduce using rule 49 (ExprList)

    Expr          go to state 94
    ExprList      go to state 95
    ExprListTail  go to state 96
    UnaryOp       go to state 53


State 76

   39 Expr: ID ExprIdTail .

    $default  reduce using rule 39 (Expr)


State 77

   40 ExprIdTail: ExprP .

    $default  reduce using rule 40 (ExprIdTail)


State 78

   46 ExprP: BinOp . Expr

    ID   shift, and go to state 43
    NUM  shift, and go to state 44
    '-'  shift, and go to state 45
    '!'  shift, and go to state 46
    '('  shift, and go to state 48

    Expr     go to state 97
    UnaryOp  go to state 53


State 79

   37 Expr: NUM ExprP .

    $default  reduce using rule 37 (Expr)


State 80

   38 Expr: '(' Expr . ')' ExprP

    ')'  shift, and go to state 98


State 81

   21 Block: '{' VarDeclList StmtList '}' .

    $default  reduce using rule 21 (Block)


State 82

   25 StmtListP: StmtList .

    $default  reduce using rule 25 (StmtListP)


State 83

   24 StmtList: Stmt StmtListP .

    $default  reduce using rule 24 (StmtList)


State 84

   28 Stmt: Expr ';' .

    $default  reduce using rule 28 (Stmt)


State 85

   36 Expr: UnaryOp Expr .

    $default  reduce using rule 36 (Expr)


State 86

    7 VarDecl: Type ID VarDeclP .

    $default  reduce using rule 7 (VarDecl)


State 87

   29 Stmt: RETURN Expr ';' .

    $default  reduce using rule 29 (Stmt)


State 88

   31 Stmt: IF '(' Expr . ')' Stmt ELSE Stmt

    ')'  shift, and go to state 99


State 89

   32 Stmt: WHILE '(' Expr . ')' Stmt

    ')'  shift, and go to state 100


State 90

   34 Stmt: PRINT ID ';' .

    $default  reduce using rule 34 (Stmt)


State 91

   35 Stmt: READ ID ';' .

    $default  reduce using rule 35 (Stmt)


State 92

   43 ExprIdTail: '=' Expr .

    $default  reduce using rule 43 (ExprIdTail)


State 93

   42 ExprIdTail: '[' Expr . ']' ExprArrayTail

    ']'  shift, and go to state 101


State 94

   50 ExprListTail: Expr . ExprListTailP

    ','  shift, and go to state 102

    $default  reduce using rule 52 (ExprListTailP)

    ExprListTailP  go to state 103


State 95

   41 ExprIdTail: '(' ExprList . ')' ExprP

    ')'  shift, and go to state 104


State 96

   48 ExprList: ExprListTail .

    $default  reduce using rule 48 (ExprList)


State 97

   46 ExprP: BinOp Expr .

    $default  reduce using rule 46 (ExprP)


State 98

   38 Expr: '(' Expr ')' . ExprP

    EQ   shift, and go to state 61
    NEQ  shift, and go to state 62
    GT   shift, and go to state 63
    LT   shift, and go to state 64
    GET  shift, and go to state 65
    LET  shift, and go to state 66
    AND  shift, and go to state 67
    OR   shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72

    $default  reduce using rule 47 (ExprP)

    ExprP  go to state 105
    BinOp  go to state 78


State 99

   31 Stmt: IF '(' Expr ')' . Stmt ELSE Stmt

    RETURN  shift, and go to state 37
    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    BREAK   shift, and go to state 40
    PRINT   shift, and go to state 41
    READ    shift, and go to state 42
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    '-'     shift, and go to state 45
    '!'     shift, and go to state 46
    ';'     shift, and go to state 47
    '('     shift, and go to state 48
    '{'     shift, and go to state 27

    Block    go to state 49
    Stmt     go to state 106
    Expr     go to state 52
    UnaryOp  go to state 53


State 100

   32 Stmt: WHILE '(' Expr ')' . Stmt

    RETURN  shift, and go to state 37
    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    BREAK   shift, and go to state 40
    PRINT   shift, and go to state 41
    READ    shift, and go to state 42
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    '-'     shift, and go to state 45
    '!'     shift, and go to state 46
    ';'     shift, and go to state 47
    '('     shift, and go to state 48
    '{'     shift, and go to state 27

    Block    go to state 49
    Stmt     go to state 107
    Expr     go to state 52
    UnaryOp  go to state 53


State 101

   42 ExprIdTail: '[' Expr ']' . ExprArrayTail

    EQ   shift, and go to state 61
    NEQ  shift, and go to state 62
    GT   shift, and go to state 63
    LT   shift, and go to state 64
    GET  shift, and go to state 65
    LET  shift, and go to state 66
    AND  shift, and go to state 67
    OR   shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '='  shift, and go to state 108

    $default  reduce using rule 47 (ExprP)

    ExprArrayTail  go to state 109
    ExprP          go to state 110
    BinOp          go to state 78


State 102

   51 ExprListTailP: ',' . ExprListTail

    ID   shift, and go to state 43
    NUM  shift, and go to state 44
    '-'  shift, and go to state 45
    '!'  shift, and go to state 46
    '('  shift, and go to state 48

    Expr          go to state 94
    ExprListTail  go to state 111
    UnaryOp       go to state 53


State 103

   50 ExprListTail: Expr ExprListTailP .

    $default  reduce using rule 50 (ExprListTail)


State 104

   41 ExprIdTail: '(' ExprList ')' . ExprP

    EQ   shift, and go to state 61
    NEQ  shift, and go to state 62
    GT   shift, and go to state 63
    LT   shift, and go to state 64
    GET  shift, and go to state 65
    LET  shift, and go to state 66
    AND  shift, and go to state 67
    OR   shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72

    $default  reduce using rule 47 (ExprP)

    ExprP  go to state 112
    BinOp  go to state 78


State 105

   38 Expr: '(' Expr ')' ExprP .

    $default  reduce using rule 38 (Expr)


State 106

   31 Stmt: IF '(' Expr ')' Stmt . ELSE Stmt

    ELSE  shift, and go to state 113


State 107

   32 Stmt: WHILE '(' Expr ')' Stmt .

    $default  reduce using rule 32 (Stmt)


State 108

   45 ExprArrayTail: '=' . Expr

    ID   shift, and go to state 43
    NUM  shift, and go to state 44
    '-'  shift, and go to state 45
    '!'  shift, and go to state 46
    '('  shift, and go to state 48

    Expr     go to state 114
    UnaryOp  go to state 53


State 109

   42 ExprIdTail: '[' Expr ']' ExprArrayTail .

    $default  reduce using rule 42 (ExprIdTail)


State 110

   44 ExprArrayTail: ExprP .

    $default  reduce using rule 44 (ExprArrayTail)


State 111

   51 ExprListTailP: ',' ExprListTail .

    $default  reduce using rule 51 (ExprListTailP)


State 112

   41 ExprIdTail: '(' ExprList ')' ExprP .

    $default  reduce using rule 41 (ExprIdTail)


State 113

   31 Stmt: IF '(' Expr ')' Stmt ELSE . Stmt

    RETURN  shift, and go to state 37
    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    BREAK   shift, and go to state 40
    PRINT   shift, and go to state 41
    READ    shift, and go to state 42
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    '-'     shift, and go to state 45
    '!'     shift, and go to state 46
    ';'     shift, and go to state 47
    '('     shift, and go to state 48
    '{'     shift, and go to state 27

    Block    go to state 49
    Stmt     go to state 115
    Expr     go to state 52
    UnaryOp  go to state 53


State 114

   45 ExprArrayTail: '=' Expr .

    $default  reduce using rule 45 (ExprArrayTail)


State 115

   31 Stmt: IF '(' Expr ')' Stmt ELSE Stmt .

    $default  reduce using rule 31 (Stmt)
